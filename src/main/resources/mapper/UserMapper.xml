<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work.ykserver.ykapps.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.work.ykserver.ykapps.pojo.User">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="loginAct" column="login_act" jdbcType="VARCHAR"/>
            <result property="loginPwd" column="login_pwd" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="accountNoExpired" column="account_no_expired" jdbcType="INTEGER"/>
            <result property="credentialsNoExpired" column="credentials_no_expired" jdbcType="INTEGER"/>
            <result property="accountNoLocked" column="account_no_locked" jdbcType="INTEGER"/>
            <result property="accountEnabled" column="account_enabled" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="createBy" column="create_by" jdbcType="INTEGER"/>
            <result property="editTime" column="edit_time" jdbcType="TIMESTAMP"/>
            <result property="editBy" column="edit_by" jdbcType="INTEGER"/>
            <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="UserDetailMap" type="com.work.ykserver.ykapps.pojo.User">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="loginAct" column="login_act" jdbcType="VARCHAR"/>
        <result property="loginPwd" column="login_pwd" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="accountNoExpired" column="account_no_expired" jdbcType="INTEGER"/>
        <result property="credentialsNoExpired" column="credentials_no_expired" jdbcType="INTEGER"/>
        <result property="accountNoLocked" column="account_no_locked" jdbcType="INTEGER"/>
        <result property="accountEnabled" column="account_enabled" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="editTime" column="edit_time" jdbcType="TIMESTAMP"/>
        <result property="editBy" column="edit_by" jdbcType="INTEGER"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>

    </resultMap>

    <sql id="Base_Column_List">
        id,login_act,login_pwd,
        name,phone,email,
        account_no_expired,credentials_no_expired,account_no_locked,
        account_enabled,create_time,create_by,
        edit_time,edit_by,last_login_time
    </sql>

    <delete id="batchDeleteByIds">
        delete from t_user
        where id in
        <foreach collection="userIds" open="(" close=")" separator="," item="userId">
            #{userId}
        </foreach>
    </delete>

    <insert id="addUser">
        insert into t_user(login_act,login_pwd,
                           name,phone,email,
                           account_no_expired,credentials_no_expired,account_no_locked,
                           account_enabled,create_time,create_by)
                    values (#{user.loginAct}, #{user.loginPwd}, #{user.name}, #{user.phone}, #{user.email},
                            #{user.accountNoExpired}, #{user.credentialsNoExpired}, #{user.accountNoLocked},
                            #{user.accountEnabled}, #{user.createTime}, #{user.createBy})
    </insert>
    <update id="updateUserById">
        update t_user set login_act = #{user.loginAct}, name = #{user.name}, phone = #{user.phone},
                          email = #{user.email}, account_no_expired = #{user.accountNoExpired},
                          credentials_no_expired = #{user.credentialsNoExpired}, account_no_locked = #{user.accountNoLocked},
                          account_enabled = #{user.accountEnabled}, edit_time = #{user.editTime}, edit_by = #{user.editBy}
            <if test="user.loginPwd != null and user.loginPwd != ''">
                ,login_pwd = #{user.loginPwd}
            </if>
        where id = #{user.id}
    </update>

    <select id="getUserByName" resultType="com.work.ykserver.ykapps.pojo.User">
        select <include refid="Base_Column_List"/>
        from t_user
        where login_act = #{username}
    </select>

    <select id="selectUserListByPage" resultType="com.work.ykserver.ykapps.pojo.User">
        select <include refid="Base_Column_List"></include>
        from t_user as tu
        <where>
            ${query.filterSQL}
        </where>
        order by tu.id asc
        limit #{page.pageNum}, #{page.pageSize}
    </select>

    <select id="selectRowCount" resultType="java.lang.Integer">
        select count(*)
        from t_user as tu
        <where>
            ${query.filterSQL}
        </where>
    </select>

    <select id="selectUserDetailById" resultType="com.work.ykserver.ykapps.pojo.User">
        select u1.id, u1.login_act, u1.login_pwd,
               u1.name, u1.phone, u1.email,
               u1.account_no_expired, u1.credentials_no_expired, u1.account_no_locked,
               u1.account_enabled, u1.create_time, u2.name as createName,
               u1.edit_time, u3.name as editName, u1.last_login_time
        from t_user as u1
        left outer join t_user as u2
        on u1.create_by = u2.id
        left outer join t_user as u3
        on u1.edit_by = u3.id
        where u1.id = #{id}
    </select>

    <select id="selectUserList" resultType="com.work.ykserver.ykapps.pojo.User">
        select id, name
        from t_user;
    </select>
</mapper>
